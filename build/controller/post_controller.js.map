{"version":3,"sources":["../../src/controller/post_controller.js"],"names":["posts","myposts","getAllPosts","req","res","send","createPost","jwt","verify","token","err","authData","sendStatus","myPost","body","push","getPostById","id","params","post","find","p","post_id","parseInt","deletePost","filter","updatePost","post_title","post_body","author"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAIA,KAAK,GAACC,iBAAV;;AAEO,IAAMC,WAAW,GAAC,SAAZA,WAAY,CAACC,GAAD,EAAMC,GAAN,EAAY;AACjCA,EAAAA,GAAG,CAACC,IAAJ,CAASL,KAAT;AACH,CAFM;;;;AAKA,IAAMM,UAAU,GAAE,SAAZA,UAAY,CAACH,GAAD,EAAKC,GAAL,EAAW;AAChCG,oBAAIC,MAAJ,CAAWL,GAAG,CAACM,KAAf,EAAsB,WAAtB,EAAmC,UAACC,GAAD,EAAMC,QAAN,EAAiB;AAChD,QAAGD,GAAH,EAAO;AACHN,MAAAA,GAAG,CAACQ,UAAJ,CAAe,GAAf;AACH,KAFD,MAEM;AACF,UAAMC,MAAM,GAACV,GAAG,CAACW,IAAjB;AACAd,MAAAA,KAAK,CAACe,IAAN,CAAWF,MAAX;AACAT,MAAAA,GAAG,CAACC,IAAJ,CAASL,KAAT;AACH;AACJ,GARD;AAUC,CAXE;;;;AAaA,IAAMgB,WAAW,GAAE,SAAbA,WAAa,CAACb,GAAD,EAAMC,GAAN,EAAY;AAAA,MAC3Ba,EAD2B,GACrBd,GAAG,CAACe,MADiB,CAC3BD,EAD2B;AAElC,MAAME,IAAI,GAAEnB,KAAK,CAACoB,IAAN,CAAW,UAACC,CAAD;AAAA,WAAKA,CAAC,CAACC,OAAF,KAAYC,QAAQ,CAACN,EAAD,CAAzB;AAAA,GAAX,CAAZ;AACDb,EAAAA,GAAG,CAACC,IAAJ,CAASc,IAAT;AACF,CAJM;;;;AAMA,IAAMK,UAAU,GAAC,SAAXA,UAAW,CAACrB,GAAD,EAAKC,GAAL,EAAW;AAAA,MACxBa,EADwB,GAClBd,GAAG,CAACe,MADc,CACxBD,EADwB;AAE/BjB,EAAAA,KAAK,GAACA,KAAK,CAACyB,MAAN,CAAa,UAACJ,CAAD;AAAA,WAAKA,CAAC,CAACC,OAAF,KAAaC,QAAQ,CAACN,EAAD,CAA1B;AAAA,GAAb,CAAN;AACAb,EAAAA,GAAG,CAACC,IAAJ,CAASL,KAAT;AACH,CAJM;;;;AAMA,IAAM0B,UAAU,GAAC,SAAXA,UAAW,CAACvB,GAAD,EAAMC,GAAN,EAAY;AAAA,MACzBa,EADyB,GACnBd,GAAG,CAACe,MADe,CACzBD,EADyB;AAAA,kBAEOd,GAAG,CAACW,IAFX;AAAA,MAEzBa,UAFyB,aAEzBA,UAFyB;AAAA,MAEbC,SAFa,aAEbA,SAFa;AAAA,MAEFC,MAFE,aAEFA,MAFE;AAGhC,MAAMhB,MAAM,GAAEb,KAAK,CAACoB,IAAN,CAAW,UAAAC,CAAC;AAAA,WAAEA,CAAC,CAACC,OAAF,KAAYC,QAAQ,CAACN,EAAD,CAAtB;AAAA,GAAZ,CAAd;;AAEA,MAAGU,UAAH,EAAc;AACVd,IAAAA,MAAM,CAACc,UAAP,GAAkBA,UAAlB;AACH;;AACD,MAAGC,SAAH,EAAa;AACTf,IAAAA,MAAM,CAACe,SAAP,GAAiBA,SAAjB;AACH;;AACD,MAAGC,MAAH,EAAU;AACNhB,IAAAA,MAAM,CAACgB,MAAP,GAAcA,MAAd;AACH;;AAEDzB,EAAAA,GAAG,CAACC,IAAJ,CAASL,KAAT;AACH,CAhBM","sourcesContent":["import myposts from '../model/posts.json';\r\nimport { jwt } from 'jsonwebtoken';\r\n\r\nlet posts=myposts;\r\n\r\nexport const getAllPosts=(req, res)=>{\r\n    res.send(posts);\r\n};\r\n\r\n\r\nexport const createPost= (req,res)=>{\r\n    jwt.verify(req.token, 'secretkey', (err, authData)=>{\r\n        if(err){\r\n            res.sendStatus(403);\r\n        }else {\r\n            const myPost=req.body;\r\n            posts.push(myPost);\r\n            res.send(posts);  \r\n        }\r\n    });\r\n        \r\n    };\r\n\r\nexport const getPostById= (req, res)=>{\r\n    const {id} = req.params;\r\n    const post= posts.find((p)=>p.post_id===parseInt(id) );\r\n   res.send(post);\r\n};\r\n\r\nexport const deletePost=(req,res)=>{\r\n    const {id} = req.params;\r\n    posts=posts.filter((p)=>p.post_id !==parseInt(id) );\r\n    res.send(posts);\r\n};\r\n\r\nexport const updatePost=(req, res)=>{\r\n    const {id} = req.params;\r\n    const {post_title, post_body, author}= req.body;\r\n    const myPost= posts.find(p=>p.post_id===parseInt(id) );\r\n\r\n    if(post_title){\r\n        myPost.post_title=post_title;\r\n    }\r\n    if(post_body){\r\n        myPost.post_body=post_body;\r\n    }\r\n    if(author){\r\n        myPost.author=author;\r\n    }\r\n\r\n    res.send(posts);\r\n};\r\n\r\n\r\n"],"file":"post_controller.js"}